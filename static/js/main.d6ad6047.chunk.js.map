{"version":3,"sources":["Comps/Modal.js","Comps/Title.js","firebase/config.js","Hooks/Usestorage.js","Comps/Progressbar.js","Comps/UploadForm.js","Hooks/UseFirestore.js","Comps/ImageGrid.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","selecctedImg","className","onClick","e","target","classList","conatin","src","alt","Title","projectStorage","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","a","getDownloadURL","createdAt","add","ProgressBar","setFile","initial","width","style","padding","margin","backgroundColor","height","background","UploadForm","setError","types","type","onChange","selected","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","console","log","map","motion","div","layout","whileHover","opacity","img","animate","transition","delay","App","selectedImg","setSelectImg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6ad6047.chunk.js","sourcesContent":["import React from 'react';\r\nconst Modal = ({selecctedImg}) => {\r\n    const handleClick = (e) => {\r\n        if(e.target.classList.conatin('backdrop')){\r\n        selecctedImg(null);\r\n        }\r\n        \r\n\r\n    }\r\n    return (\r\n    <div className=\"backdrop\"  onClick={handleClick}>\r\n        <img src={selecctedImg} alt=\"enlarged pic\"/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\n\r\n\r\nconst Title = () => \r\n{\r\n  return (\r\n    <>\r\n      <div className=\"title\">\r\n        <h1>StuffYourPics</h1>\r\n\r\n\r\n        <h2 className=\"mybase ny-3\"  >Remembering old memories gives you big smile on your face</h2>\r\n        <p>The best moments are the unplanned ones that just happen but make your day perfect !</p>\r\n\r\n\r\n      </div>\r\n      </>\r\n      );\r\n      \r\n}\r\nexport default Title;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n","import  firebase from 'firebase/app';  \r\nimport 'firebase/auth'\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\n// Import the functions you need from the SDKs you need\r\n// import  firebase  from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDjunCMi3qUyfl7bDR6WXsuxzYxp289u3s\",\r\n  authDomain: \"photogallery-adb5b.firebaseapp.com\",\r\n  projectId: \"photogallery-adb5b\",\r\n  storageBucket: \"photogallery-adb5b.appspot.com\",\r\n  messagingSenderId: \"991493389904\",\r\n  appId: \"1:991493389904:web:fb80b6bf984b93f2cadb55\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n  const projectStorage = firebase.storage();\r\n  const projectFirestore = firebase.firestore();\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n  \r\nexport { projectStorage, projectFirestore , timestamp};","import { useState, useEffect } from 'react';\r\nimport  { projectStorage , projectFirestore, timestamp} from \"../firebase/config\";\r\nconst useStorage = (file) => \r\n{\r\nconst [progress, setProgress] = useState(0);\r\n const [error, setError] = useState(null);\r\nconst [url, setUrl] = useState(null);\r\n\r\nuseEffect(() => {\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection('images');\r\n    storageRef.put(file).on('state_changed', (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) *100;\r\n        setProgress(percentage);\r\n\r\n    }, async () => {\r\n        const url = await storageRef.getDownloadURL();\r\n        const createdAt = timestamp();\r\n        collectionRef.add({  url, createdAt });\r\n        setUrl(url);\r\n    }\r\n    )\r\n}, [file]);\r\nreturn { progress, url, error }\r\n}\r\n\r\nexport default useStorage;\r\n","import React from 'react';\r\nimport useStorage from '../Hooks/Usestorage';\r\nimport { useEffect } from 'react';\r\nconst ProgressBar = ({file, setFile}) => {\r\n   const { url, progress } = useStorage(file);\r\nuseEffect(()=> {\r\n     if(url)\r\n     {\r\n         setFile(null);\r\n     }\r\n\r\n}, [url, setFile]);\r\n\r\n \r\n   return (\r\n    \r\n        <div className='progress-bar' initial={{width:0}} style={{ width: progress + '%' }} style={{padding: '3px', margin: '3px' ,backgroundColor: 'cyan', height: '5px' ,background: 'var(--primary)'}}>progress bar</div>\r\n    )\r\n}\r\nexport default ProgressBar;\r\n","import react, {useState} from 'react';\r\nimport ProgressBar from './Progressbar';\r\n\r\nconst UploadForm = () => {\r\n    const [file, setFile] = useState(null);\r\n   const [error, setError] = useState(null);\r\n const types = ['image/png', 'image/jpeg'];\r\n    const handleclick = (e) => {\r\n        let selected = e.target.files[0];\r\n   if(selected && types.includes(selected.type)) {\r\n       setFile(selected);\r\n       setError('');\r\n   } else {\r\n       setFile(null);\r\n \r\nsetError('please select an image file (png or jpeg)');\r\n   }\r\n    }\r\nreturn(\r\n    <form >\r\n        <input className=\"uploaded\"  type=\"File\" onChange={handleclick} />\r\n        <div className=\"output\">\r\n            {error && <div className=\"error\" >{error} </div>}\r\n            { file && <div>{file.name}</div>}\r\n            { file && <ProgressBar file={file} setFile={setFile}/>}\r\n        </div>\r\n       \r\n\r\n    </form>\r\n)\r\n\r\n}\r\nexport default UploadForm;","import { useState, useEffect } from 'react';\r\nimport { projectFirestore } from '../firebase/config';\r\nconst useFirestore = (collection) => {\r\n    const [docs, setDocs] = useState([]);\r\n   useEffect(() => {\r\n   const unsub =  projectFirestore.collection(collection)\r\n    .orderBy('createdAt', 'desc')\r\n    .onSnapshot((snap) => {\r\n        let documents = [];  \r\n        snap.forEach(doc => {\r\n            documents.push({...doc.data(), id: doc.id})\r\n        });\r\n        setDocs(documents);\r\n    });\r\n    return () => unsub();\r\n    }, [collection])\r\n\r\n    return { docs };\r\n}\r\nexport default useFirestore; ","import React from \"react\";\r\nimport useFirestore from '../Hooks/UseFirestore';\r\nimport { motion } from 'framer-motion';\r\nconst ImageGrid = ( {setSelectedImg}) => {\r\n    const { docs } = useFirestore('images');\r\n    console.log(docs);\r\n    return (\r\n        <div className=\"img-grid \" >\r\n            Images\r\n            { docs && docs.map(doc => (\r\n                <motion.div className=\"img-wrap\"  key={doc.id}\r\n                layout   \r\n                whileHover={{opacity: '1'}}\r\n                   onClick ={() => setSelectedImg(doc.url)}>\r\n<motion.img src={doc.url} alt=\"uploaded pic\"\r\n                   initial={{opacity: 0}}\r\n                   animate={{opacity: 1}}\r\n                   transition={{delay: 1}}  />\r\n\r\n                </motion.div>\r\n            )\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid;","import React from 'react';\nimport Modal from './Comps/Modal';\nimport Title from './Comps/Title';\nimport UploadForm from './Comps/UploadForm';\nimport ImageGrid from './Comps/ImageGrid';\nimport index from '../src/index';\nimport {useState} from 'react';\nimport './App.css';\nfunction App() {\n \n  const [selectedImg, setSelectedImg] = useState(null);  \n  return (\n    <div className=\"background \" style={{backgroundColor: 'violet'}} >\n   <div className=\"App\"> \n    <Title />\n     <UploadForm />\n     <ImageGrid setSelectedImg={setSelectedImg}/>\n     {selectedImg && <Modal selectedImg={selectedImg} setSelectImg={setSelectedImg}/>}\n    \n   </div>\n   </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}